{% comment %}
Multi-Column Buttons + Modal
• Adjustable button width/height per block
• Adjustable gap desktop & mobile
• Horizontal alignment (left / center / right)
{% endcomment %}

<div class="multi-column-buttons color-{{ section.settings.color_scheme }} text-{{ section.settings.text_align }}">
  <div class="page-width">
    {% if section.settings.heading != blank %}
      <h2 class="section-heading {{ section.settings.heading_size }}">{{ section.settings.heading }}</h2>
    {% endif %}
    {% if section.settings.subheading != blank %}
      <p class="section-subheading">{{ section.settings.subheading }}</p>
    {% endif %}

    <div
      class="grid grid--{{ section.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_mobile }}-col-tablet-down justify-{{ section.settings.button_align }}"
      style="
        gap: {{ section.settings.gap_desktop }}px;
      "
    >
      {% for block in section.blocks %}
        <div class="grid__item" style="margin-bottom: {{ section.settings.gap_mobile }}px;">
          {% assign w = block.settings.btn_width | append: 'px' %}
          {% assign h = block.settings.btn_height | append: 'px' %}

          <a
            {% if block.settings.button_link == blank %}
              role="button" aria-disabled="true"
            {% else %}
              href="{{ block.settings.button_link }}"
            {% endif %}
            class="button {{ block.settings.button_style }}"
            style="width:{{ w }};height:{{ h }};line-height:{{ h }};"
            {% if block.settings.modal_image != blank %}
              data-modal-target="modal-{{ section.id }}-{{ forloop.index }}"
            {% endif %}
          >
            {{ block.settings.button_label | escape }}
          </a>

          {% if block.settings.modal_image != blank %}
            <div id="modal-{{ section.id }}-{{ forloop.index }}" class="mc-modal hidden fixed inset-0 z-50 flex items-center justify-center bg-black/60">
              <div class="bg-white p-4 rounded-lg max-w-xl w-full relative">
                <button class="mc-modal-close absolute top-2 right-2 text-xl">&times;</button>
                {{ block.settings.modal_image | image_url: width: 1200 | image_tag: class: 'w-full h-auto rounded-md' }}
              </div>
            </div>
          {% endif %}
        </div>
      {% endfor %}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('[data-modal-target]').forEach(btn => {
    btn.addEventListener('click', e => {
      e.preventDefault();
      const target = btn.getAttribute('data-modal-target');
      document.getElementById(target).classList.remove('hidden');
    });
  });
  document.querySelectorAll('.mc-modal-close').forEach(closeBtn => {
    closeBtn.addEventListener('click', () => {
      closeBtn.closest('.mc-modal').classList.add('hidden');
    });
  });
  document.querySelectorAll('.mc-modal').forEach(modal => {
    modal.addEventListener('click', e => {
      if (e.target === modal) modal.classList.add('hidden');
    });
  });
});
</script>

{% schema %}
{
  "name": "MultiColumn Buttons",
  "class": "section",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading" },
    { "type": "text", "id": "subheading", "label": "Subheading" },
    {
      "type": "select",
      "id": "text_align",
      "label": "Text alignment",
      "default": "center",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ]
    },
    {
      "type": "select",
      "id": "heading_size",
      "label": "Heading size",
      "default": "h2",
      "options": [
        { "value": "h1", "label": "Large" },
        { "value": "h2", "label": "Medium" },
        { "value": "h3", "label": "Small" }
      ]
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "label": "Columns (desktop)",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "columns_mobile",
      "label": "Columns (mobile)",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 1
    },
    {
      "type": "range",
      "id": "gap_desktop",
      "label": "Gap between buttons (desktop, px)",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 20
    },
    {
      "type": "range",
      "id": "gap_mobile",
      "label": "Gap between buttons (mobile, px)",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 10
    },
    {
      "type": "select",
      "id": "button_align",
      "label": "Buttons alignment",
      "default": "center",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ]
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "background-1",
      "options": [
        { "value": "background-1", "label": "Background 1" },
        { "value": "background-2", "label": "Background 2" },
        { "value": "inverse", "label": "Inverse" }
      ]
    }
  ],
  "blocks": [
    {
      "type": "button",
      "name": "Button",
      "settings": [
        { "type": "text", "id": "button_label", "label": "Button label", "default": "Open Modal" },
        { "type": "url", "id": "button_link", "label": "Button link (optional)" },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "button--primary",
          "options": [
            { "value": "button--primary", "label": "Primary" },
            { "value": "button--secondary", "label": "Secondary" }
          ]
        },
        { "type": "image_picker", "id": "modal_image", "label": "Modal image (optional)" },
        {
          "type": "range",
          "id": "btn_width",
          "label": "Button width (px)",
          "min": 100,
          "max": 400,
          "step": 10,
          "default": 200
        },
        {
          "type": "range",
          "id": "btn_height",
          "label": "Button height (px)",
          "min": 30,
          "max": 120,
          "step": 5,
          "default": 50
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "MultiColumn Buttons",
      "blocks": [{ "type": "button" }, { "type": "button" }]
    }
  ]
}
{% endschema %}
